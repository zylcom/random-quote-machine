{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","quotes","setQuotes","currentQuote","setCurrentQuote","currentAuthor","setCurrentAuthor","color","setColor","display","setDisplay","progress","setProgress","colors","getQuotes","a","fetch","then","res","json","data","console","log","message","useEffect","changeColor","Math","floor","random","length","className","style","background","transition","role","aria-hidden","onClick","title","navigator","clipboard","writeText","setTimeout","id","opacity","transitionText","setInterval","clearInterval","quote","author","href","encodeURIComponent","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb189fbc.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [quotes, setQuotes] = useState([]);\n  const [currentQuote, setCurrentQuote] = useState(\n    \"Knowledge is better than wealth, knowledge will protect you, while wealth you must protect.\"\n  );\n  const [currentAuthor, setCurrentAuthor] = useState(\"Utsman Bin Affan\");\n  const [color, setColor] = useState(\"27ae60\");\n  const [display, setDisplay] = useState(\"none\");\n  let [progress, setProgress] = useState(100);\n  const colors = [\n    \"#16a085\",\n    \"#27ae60\",\n    \"#2c3e50\",\n    \"#f39c12\",\n    \"#e74c3c\",\n    \"#9b59b6\",\n    \"#FB6964\",\n    \"#342224\",\n    \"#472E32\",\n    \"#BDBB99\",\n    \"#77B1A9\",\n    \"#73A857\",\n  ];\n\n  const getQuotes = async () => {\n    try {\n      await fetch(\n        \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n      )\n        .then((res) => res.json())\n        .then((data) => setQuotes(data.quotes));\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getQuotes();\n  }, []);\n\n  const changeColor = () => {\n    setColor(colors[Math.floor(Math.random() * colors.length)]);\n  };\n\n  const getRandomQuote = () => {\n    const transitionText = setInterval(() => {\n      setProgress((progress -= 10));\n      console.log(progress);\n      if (progress === 10) {\n        clearInterval(transitionText);\n        setTimeout(() => {\n          setCurrentQuote(quotes[Math.floor(Math.random() * quotes.length)].quote);\n          setCurrentAuthor(quotes[Math.floor(Math.random() * quotes.length)].author);\n          changeColor();\n          setProgress(100);\n        }, 500);\n      }\n      if (progress <= 0) {\n        clearInterval(transitionText);\n      }\n    }, 50);\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(`\"${currentQuote}\" - ${currentAuthor}`);\n    setDisplay(\"block\");\n    setTimeout(() => {\n      setDisplay(\"none\");\n    }, 3000);\n  };\n\n  return (\n    <div className=\"App\" style={{ background: color, transition: \"background 1.2s\" }}>\n      <div className=\"alert alert-success\" role=\"alert\" style={{ display }}>\n        <i className=\"fa fa-check\" aria-hidden=\"true\"></i> Copied to clipboard\n      </div>\n      <div className=\"change-color\">\n        <button\n          className=\"btn float-end\"\n          style={{ background: \"transparent\" }}\n          onClick={changeColor}\n        >\n          <i className=\"fa fa-refresh\" aria-hidden=\"true\" title=\"Change color\"></i>\n        </button>\n        <button\n          className=\"btn float-end copy\"\n          style={{ background: \"transparent\" }}\n          onClick={copyToClipboard}\n        >\n          <i className=\"fa fa-clipboard\" aria-hidden=\"true\" title=\"Copy to clipboard\"></i>\n        </button>\n      </div>\n      <div id=\"quote-box\">\n        <div\n          className=\"quote-text\"\n          style={{ opacity: progress / 100, color, transition: \"opacity 1.2s, color 1.2s\" }}\n        >\n          <i className=\"fa fa-quote-left\"></i>\n          <span id=\"text\">{currentQuote}</span>\n        </div>\n        <div\n          className=\"author-text\"\n          style={{ opacity: progress / 100, color, transition: \"opacity 1.2s, color 1.2s\" }}\n        >\n          <span id=\"author\">- {currentAuthor}</span>\n        </div>\n        <div className=\"btns\">\n          <button\n            id=\"new-quote\"\n            className=\"btn\"\n            style={{ background: color, transition: \"background 1.2s\" }}\n            onClick={getRandomQuote}\n          >\n            New Quote\n          </button>\n          <div className=\"links\">\n            <a\n              href={`https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\"${encodeURIComponent(\n                currentQuote\n              )}\" ${currentAuthor}`}\n              className=\"btn\"\n              id=\"tweet-quote\"\n              title=\"Tweet this quote!\"\n              target=\"_top\"\n              style={{ background: color, transition: \"background 1.2s\" }}\n            >\n              <i className=\"fa fa-twitter\"></i>\n            </a>\n            <a\n              href={`https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption=${encodeURIComponent(\n                currentAuthor\n              )}&content=${encodeURIComponent(\n                currentQuote\n              )}&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button`}\n              className=\"btn\"\n              id=\"tumblr-quote\"\n              title=\"Post this quote on tumblr!\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              style={{ background: color, transition: \"background 1.2s\" }}\n            >\n              <i className=\"fa fa-tumblr\"></i>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer mt-3\">\n        <span className=\"text-white\">Created by Sabil &bull; Built with ReactJs</span>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}